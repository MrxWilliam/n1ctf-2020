from z3 import *

s=Solver()

fl=[BitVec('fl%d'%i,8) for i in range(63)]


flag=[BitVec('flag%d'%i,8) for i in range(63)]

a = ord('N')
b = ord('1')

for i in range(63):
    flag[i]=fl[i]


for i in range(3,31):
    if i%2==0:
        flag[i * 2] = ((flag[i * 2] & 0xf0) >> 4) | ((flag[i * 2] & 0xf) << 4)
        flag[i * 2] ^= a
        a = flag[i * 2]
        flag[(i * 2) + 1] ^= b
        b = flag[(i * 2) + 1]
    
    else:
        flag[i * 2] ^= b
        b = flag[i * 2]
        flag[(i * 2) + 1] = ((flag[(i * 2) + 1] & 0xf0) >> 4) | ((flag[(i * 2) + 1] & 0xf) << 4)
        flag[(i * 2) + 1] ^= a
        a = flag[(i * 2) + 1]

fff=[0x6e,0x31,0x63,0x74,0x66,0x7b,0x65,0xc8,0x9c,0x3a,0x62,0xff,0xbc,0x3d,0x6e,0xfb,0xde,0x1b,0x58,0x99,0xcc,0x2a,0x6f,0x8a,0x7f,0xa,0x52,0x49,0x1d,0x22,0x76,0x8b,0x7f,0x18,0x47,0xf9,0xed,0x29,0x6d,0x2b,0xbf,0x3,0x44,0x4a,0xde,0x37,0x68,0xe9,0x1d,0x37,0x7e,0xfb,0xbe,0x1b,0x49,0xe8,0xdd,0x3d,0x74,0x3b,0x4f,0x5a,0x7d]


for i in range(63):
    s.add(fff[i]==flag[i])



if s.check()==sat:
    z=s.model()
    for j in range(63):
        print(chr(z[fl[j]].as_long()),end='')

